{"version":3,"sources":["index.coffee"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"/source/","sourcesContent":["require(\"source-map-support\").install()\n\n{exec, spawn} = require(\"child_process\")\n\n# exec #simple\nexe = (cmd, opts, cb) ->\n  exec cmd, opts, (err, stdout, stderr) ->\n    process.stderr.write(stderr) if stderr\n    if err isnt null\n      console.trace JSON.stringify(err, null, 2)\n    else if cb?\n      cb(stdout)\n    else\n      process.stdout.write(stdout)\n\n# spawn #simple\nrun = (cmd, opts = {}) ->\n  args = cmd.split /\\s+/\n  command = args.shift()\n  handlers = opts.eventHandlers\n  chips = spawn(command, args, opts)\n  chips.stdout.on \"data\", (data) ->\n    if typeof handlers?.stdout is \"function\"\n      handlers.stdout(data)\n    else\n      process.stdout.write(data)\n  chips.stderr.on \"data\", (data) ->\n    if typeof handlers?.stderr is \"function\"\n      handlers.stderr(data)\n    else\n      process.stderr.write(data)\n  chips.on \"error\", (err) ->\n    if typeof handlers?.error is \"function\"\n      handlers.error(err)\n    else\n      console.trace JSON.stringify(err, null, 2)\n  chips.on \"close\", (code) ->\n    if typeof handlers?.close is \"function\"\n      handlers.close(code)\n    else\n      unless code is 0\n        console.log \"This `#{cmd}` process exited with code #{code}.\"\n\n\nmodule.exports = (cmd, args...) ->\n  n = args.length\n  if n > 0\n    if typeof args[n - 1] is \"function\"\n      if n is 1\n        exe cmd, {}, args[0]\n      else\n        # exe takes at most 3 arguments (here using the first & last of args)\n        exe cmd, args[0], args[n - 1]\n    else\n      # run takes at most 2 arguments\n      run cmd, args[0]\n  else\n    run cmd\n"]}